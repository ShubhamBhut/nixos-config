# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ inputs, config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
      ./configuration.nix
      inputs.nixos-hardware.nixosModules.common-cpu-amd-pstate
      inputs.nixos-hardware.nixosModules.common-gpu-amd
      inputs.nixos-hardware.nixosModules.common-pc-laptop
    ];

  fileSystems."/" =
    { device = "rpool/system/root";
      fsType = "zfs";
    };

  fileSystems."/nix" =
    { device = "rpool/nix";
      fsType = "zfs";
    };

  fileSystems."/home" =
    { device = "rpool/user";
      fsType = "zfs";
    };

  fileSystems."/var/cache" =
    { device = "rpool/cache";
      fsType = "zfs";
    };
  fileSystems."/boot" =
    { device = "/dev/nvme0n1p7";
      fsType = "vfat";
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp5s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp6s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";


  boot = { 
    kernelModules = [ "kvm-amd" ];
    kernelPackages = pkgs.zfs.latestCompatibleLinuxPackages;
    kernelParams = [ "elevator=none" ];
    supportedFilesystems = [ "zfs" ];
    initrd.availableKernelModules = [ "nvme" "xhci_pci" ];
    initrd.systemd.enable = true;
    initrd.luks.devices.crypted = {
      header = "/dev/nvme0n1p5";
      device = "/dev/nvme0n1p6";
      bypassWorkqueues = true;
    };
    zfs.devNodes = "/dev/mapper/crypted";
  };
  hardware = {
    cpu.amd.updateMicrocode = true;
    enableAllFirmware = true;
    amdgpu.opencl = false;
  };
  console.font = lib.mkForce "${pkgs.terminus_font}/share/consolefonts/ter-u28n.psf.gz";
  environment.systemPackages = with pkgs; [ zenmonitor ryzenadj ];
  powerManagement.cpuFreqGovernor = "schedutil";

  #hyprland
  programs.hyprland.package = inputs.hyprland.packages.${pkgs.stdenv.hostPlatform.system}.hyprland;
  programs.hyprland.enable = true;
  programs.hyprland.xwayland = {
    enable = true;
    hidpi = true;
  };

}


